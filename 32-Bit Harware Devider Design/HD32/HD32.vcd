$date
	Mon Nov  2 01:11:45 2020
$end

$version
	Synopsys VCS version G-2012.09
$end

$timescale
	1s
$end

$comment Csum: 1 4d5d1c0e0bb2a15e $end


$scope module testbench $end
$var reg 1 ! i_mode $end
$var reg 32 " i_dividend [31:0] $end
$var reg 32 # i_divider [31:0] $end
$var wire 32 $ o_quotient [31:0] $end
$var wire 32 % o_remainder [31:0] $end
$var wire 1 & o_zero_error $end
$var reg 8 ' delay [7:0] $end

$scope module HD32 $end
$var wire 1 ! mode $end
$var wire 32 " dividend [31:0] $end
$var wire 32 # divider [31:0] $end
$var reg 32 ( quotient [31:0] $end
$var reg 32 ) remainder [31:0] $end
$var reg 1 * zero_error $end
$var reg 32 + msb_dividend [31:0] $end
$var reg 32 , msb_divider [31:0] $end
$var reg 32 - reg_dividend [31:0] $end
$var reg 32 . temp_dividend [31:0] $end
$var reg 32 / reg_divider [31:0] $end
$var reg 32 0 temp_divider [31:0] $end
$var integer 32 1 i $end

$scope function msb $end
$var reg 32 2 msb [31:0] $end
$var reg 32 3 in [31:0] $end
$var integer 32 4 i $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
x!
x&
x*
b00001010 '
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 4
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx )
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0
$end
$dumpon
x!
x&
x*
b00001010 '
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 4
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx )
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0
$end
#10
0!
b00000000000000000000000001100000 "
b00000000000000000000000000001100 #
b00000000000000000000000000000011 ,
b00000000000000000000000000000110 +
b00000000000000000000000000000011 2
b11111111111111111111111111111111 4
b00000000000000000000000000001100 3
b00000000000000000000000000001100 /
b00000000000000000000000001100000 -
0*
0&
b11111111111111111111111111111111 1
b00000000000000000000000000000110 0
b00000000000000000000000000001000 (
b00000000000000000000000000001000 $
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#20
b00000000000000000000000000001101 #
b00000000000000000000000000001101 3
b00000000000000000000000000001101 /
b00000000000000000000000000000101 )
b00000000000000000000000000000101 %
b00000000000000000000000000000111 (
b00000000000000000000000000000111 $
#30
b00000000000000000000000001100000 #
b00000000000000000000000000000110 ,
b00000000000000000000000000000110 2
b00000000000000000000000001100000 3
b00000000000000000000000001100000 /
b00000000000000000000000000110000 0
b00000000000000000000000000000001 (
b00000000000000000000000000000001 $
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#40
b00000000000000000000000001100010 #
b00000000000000000000000001100010 3
b00000000000000000000000001100010 /
b00000000000000000000000001100000 )
b00000000000000000000000001100000 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 $
#50
b00000000000000000000000000000000 "
b00000000000000000000000000000000 -
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#60
b11111111111111111111111111111111 "
b00000000000000000000000000011111 +
b11111111111111111111111111111111 -
b00000000000000000000000000110001 0
b00000010100111001011110000010100 (
b00000010100111001011110000010100 $
b00000000000000000000000001010111 )
b00000000000000000000000001010111 %
#70
b00000000000000000000000000000000 #
b00000000000000000000000000011111 ,
b00000000000000000000000000011111 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 /
1*
1&
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 $
#80
1!
b00000000000000000000000001100000 "
b00000000000000000000000000001100 #
b00000000000000000000000000000011 ,
b00000000000000000000000000000110 +
b00000000000000000000000000000011 2
b00000000000000000000000000001100 3
b00000000000000000000000000001100 /
b00000000000000000000000001100000 -
0*
0&
b00000000000000000000000000000110 0
b00000000000000000000000000001000 (
b00000000000000000000000000001000 $
#90
b00000000000000000000000000001101 #
b00000000000000000000000000001101 3
b00000000000000000000000000001101 /
b00000000000000000000000000000101 )
b00000000000000000000000000000101 %
b00000000000000000000000000000111 (
b00000000000000000000000000000111 $
#100
b00000000000000000000000001100000 #
b00000000000000000000000000000110 ,
b00000000000000000000000000000110 2
b00000000000000000000000001100000 3
b00000000000000000000000001100000 /
b00000000000000000000000000110000 0
b00000000000000000000000000000001 (
b00000000000000000000000000000001 $
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#110
b00000000000000000000000001100010 #
b00000000000000000000000001100010 3
b00000000000000000000000001100010 /
b00000000000000000000000001100000 )
b00000000000000000000000001100000 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 $
#120
b00000000000000000000000000000000 "
b00000000000000000000000000000000 -
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#130
b11111111111111111111111110100000 "
b00000000000000000000000000001100 #
b00000000000000000000000000000011 ,
b00000000000000000000000000000011 2
b00000000000000000000000000001100 3
b00000000000000000000000000001100 /
b00000000000000000000000001100000 -
b00000000000000000000000000000110 0
b11111111111111111111111111111000 (
b11111111111111111111111111111000 $
#140
b00000000000000000000000000001101 #
b00000000000000000000000000001101 3
b00000000000000000000000000001101 /
b11111111111111111111111111111011 )
b11111111111111111111111111111011 %
b11111111111111111111111111111001 (
b11111111111111111111111111111001 $
#150
b00000000000000000000000001100010 #
b00000000000000000000000000000110 ,
b00000000000000000000000000000110 2
b00000000000000000000000001100010 3
b00000000000000000000000001100010 /
b11111111111111111111111110100000 )
b11111111111111111111111110100000 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 $
#160
b00000000000000000000000001100000 "
b11111111111111111111111111110100 #
b00000000000000000000000001100000 )
b00000000000000000000000001100000 %
b00000000000000000000000000000011 ,
b00000000000000000000000000000011 2
b00000000000000000000000000001100 3
b00000000000000000000000000001100 /
b11111111111111111111111111111000 (
b11111111111111111111111111111000 $
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#170
b11111111111111111111111111110011 #
b00000000000000000000000000001101 3
b00000000000000000000000000001101 /
b00000000000000000000000000000101 )
b00000000000000000000000000000101 %
b11111111111111111111111111111001 (
b11111111111111111111111111111001 $
#180
b11111111111111111111111110100000 #
b00000000000000000000000000000110 ,
b00000000000000000000000000000110 2
b00000000000000000000000001100000 3
b00000000000000000000000001100000 /
b00000000000000000000000000110000 0
b11111111111111111111111111111111 (
b11111111111111111111111111111111 $
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#190
b11111111111111111111111110011110 #
b00000000000000000000000001100010 3
b00000000000000000000000001100010 /
b00000000000000000000000001100000 )
b00000000000000000000000001100000 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 $
#200
b11111111111111111111111111111111 #
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 2
b00000000000000000000000000000001 3
b00000000000000000000000000000001 /
b00000000000000000000000000000000 0
b11111111111111111111111110100000 (
b11111111111111111111111110100000 $
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#210
b11111111111111111111111110100000 "
b11111111111111111111111111110100 #
b00000000000000000000000001100000 (
b00000000000000000000000001100000 $
b00000000000000000000000000000011 ,
b00000000000000000000000000000011 2
b00000000000000000000000000001100 3
b00000000000000000000000000001100 /
b00000000000000000000000000000110 0
b00000000000000000000000000001000 (
b00000000000000000000000000001000 $
#220
b11111111111111111111111111110011 #
b00000000000000000000000000001101 3
b00000000000000000000000000001101 /
b11111111111111111111111111111011 )
b11111111111111111111111111111011 %
b00000000000000000000000000000111 (
b00000000000000000000000000000111 $
#230
b11111111111111111111111110100000 #
b00000000000000000000000000000110 ,
b00000000000000000000000000000110 2
b00000000000000000000000001100000 3
b00000000000000000000000001100000 /
b00000000000000000000000000110000 0
b00000000000000000000000000000001 (
b00000000000000000000000000000001 $
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#240
b11111111111111111111111110011110 #
b00000000000000000000000001100010 3
b00000000000000000000000001100010 /
b11111111111111111111111110100000 )
b11111111111111111111111110100000 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 $
#250
b01111111111111111111111111111111 "
b00000000000000000000000001100000 )
b00000000000000000000000001100000 %
b00000000000000000000000000011110 +
b01111111111111111111111111111111 -
b00000000000000000000000000110001 0
b11111110101100011010000111110110 (
b11111110101100011010000111110110 $
b00000000000000000000000000101011 )
b00000000000000000000000000101011 %
#260
b11111111111111111111111111111111 "
b00000001010011100101111000001010 (
b00000001010011100101111000001010 $
b11111111111111111111111111010101 )
b11111111111111111111111111010101 %
b00000000000000000000000000000000 +
b00000000000000000000000000000001 -
b11111111111111111111111111111111 )
b11111111111111111111111111111111 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 $
#270
b00000000000000000000000000000000 "
b00000000000000000000000000000001 )
b00000000000000000000000000000001 %
b00000000000000000000000000000110 +
b00000000000000000000000000000000 -
b00000000000000000000000000000000 )
b00000000000000000000000000000000 %
#280
b00000000000000000000000000000000 #
b00000000000000000000000000000000 3
b00000000000000000000000000000000 /
1*
1&
#1000
$dumpall
1!
1&
1*
b00001010 '
b11111111111111111111111111111111 1
b00000000000000000000000000000000 "
b00000000000000000000000000000000 #
b11111111111111111111111111111111 4
b00000000000000000000000000000000 3
b00000000000000000000000000000110 2
b00000000000000000000000000000110 +
b00000000000000000000000000000110 ,
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 (
b00000000000000000000000000000000 -
b00000000000000000000000000000000 /
b00000000000000000000000000000000 )
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
b00000000000000000000000000110001 0
$end
$dumpoff
x!
x&
x*
bxxxxxxxx '
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 4
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx )
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0
$end
